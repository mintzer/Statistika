}
else if (type == 'cdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = pexp, args = c(rate=rate),
color = "#48cbd1", size=2)+      labs(
title = "Cumulative Distribution Function",
subtitle = paste0("Exponential (", rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
}
draw_exp(3,0.4, 'cdf')
draw_exp(7,0.4, 'cdf')
draw_exp(10,0.4, 'cdf')
draw_exp(10,0.4, 'pdf')
draw_exp <- function(t, rate, type='pdf') {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(0, t))
if (type == 'pdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = dexp, args = c(rate=rate),
color = "#48cbd1", size=2)+
labs(
title = "Probability Density Function",
subtitle = paste0("Exponential (", lamda, '=', rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
else if (type == 'cdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = pexp, args = c(rate=rate),
color = "#48cbd1", size=2)+      labs(
title = "Cumulative Distribution Function",
subtitle = paste0("Exponential (", lamda, '=', rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
}
draw_exp(10,0.4, 'pdf')
lambda
sigma
beta
expression(lamda)
expression(lamda)
draw_exp <- function(t, rate, type='pdf') {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(0, t))
if (type == 'pdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = dexp, args = c(rate=rate),
color = "#48cbd1", size=2)+
labs(
title = "Probability Density Function",
subtitle = paste0("Exponential (", expression(lamda), '=', rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
else if (type == 'cdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = pexp, args = c(rate=rate),
color = "#48cbd1", size=2)+      labs(
title = "Cumulative Distribution Function",
subtitle = paste0("Exponential (", expression(lamda), '=', rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
}
draw_exp(10,0.4, 'pdf')
draw_exp <- function(t, rate, type='pdf') {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(0, t))
if (type == 'pdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = dexp, args = c(rate=rate),
color = "#48cbd1", size=2)+
labs(
title = "Probability Density Function",
subtitle = paste0("Exponential (", expression(lambda), '=', rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
else if (type == 'cdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = pexp, args = c(rate=rate),
color = "#48cbd1", size=2)+      labs(
title = "Cumulative Distribution Function",
subtitle = paste0("Exponential (", expression(lambda), '=', rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
}
draw_exp(10,0.4, 'pdf')
ggplot(xvalues,aes(x=x)) +
stat_function(fun = dexp, args = c(rate=rate),
color = "#48cbd1", size=2)+
labs(
title = "Probability Density Function",
subtitle = paste0("Exponential (", expression(mu), '=', rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
draw_exp <- function(t, rate, type='pdf') {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(0, t))
if (type == 'pdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = dexp, args = c(rate=rate),
color = "#48cbd1", size=2)+
labs(
title = "Probability Density Function",
subtitle = paste0("Exponential (", expression(mu), '=', rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
else if (type == 'cdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = pexp, args = c(rate=rate),
color = "#48cbd1", size=2)+      labs(
title = "Cumulative Distribution Function",
subtitle = paste0("Exponential (", expression(lambda), '=', rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
}
draw_exp(10,0.4, 'pdf')
draw_exp <- function(t, rate, type='pdf') {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(0, t))
if (type == 'pdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = dexp, args = c(rate=rate),
color = "#48cbd1", size=2)+
labs(
title = "Probability Density Function",
subtitle = expression(paste0("Exponential (", lambda, '=', rate, ")")),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
else if (type == 'cdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = pexp, args = c(rate=rate),
color = "#48cbd1", size=2)+      labs(
title = "Cumulative Distribution Function",
subtitle = expression(paste0("Exponential (", lambda, '=', rate, ")")),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
}
draw_exp(10,0.4, 'pdf')
draw_exp <- function(t, rate, type='pdf') {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(0, t))
if (type == 'pdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = dexp, args = c(rate=rate),
color = "#48cbd1", size=2)+
labs(
title = "Probability Density Function",
subtitle = expression(paste("Exponential (", lambda, '=', rate, ")")),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
else if (type == 'cdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = pexp, args = c(rate=rate),
color = "#48cbd1", size=2)+      labs(
title = "Cumulative Distribution Function",
subtitle = expression(paste("Exponential (", lambda, '=', rate, ")")),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
}
draw_exp(10,0.4, 'pdf')
draw_exp <- function(t, rate, type='pdf') {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(0, t))
if (type == 'pdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = dexp, args = c(rate=rate),
color = "#48cbd1", size=2)+
labs(
title = "Probability Density Function",
subtitle = paste0("Exponential (", rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
else if (type == 'cdf') {
ggplot(xvalues,aes(x=x)) +
stat_function(fun = pexp, args = c(rate=rate),
color = "#48cbd1", size=2)+      labs(
title = "Cumulative Distribution Function",
subtitle = paste0("Exponential (", rate, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
}
draw_exp(10,0.4, 'cdf')
draw_geom <- function(n, p, type='pmf', marked_n=-1) {
library(tidyverse)
library(ggplot2)
X <- 0:n
if (type == 'pmf') {
data.frame(x = X, prob = dgeom(x = X, prob = p)) %>%
mutate(Failures = ifelse(x == marked_n, marked_n, "other")) %>%
ggplot(aes(x = factor(x), y = prob, fill = Failures)) +
geom_col() +
geom_text(
aes(label = round(prob,2), y = prob + 0.01),
position = position_dodge(0.9),
size = 3,
vjust = 0
) +
labs(
title = "Probability Mass Function",
subtitle = paste0("Geometric (", p, ")"),
x = "Failures before first success",
y = "Probability") +
guides(fill='none') +
scale_fill_manual(values=c("#48cbd1","brown3"))
}
else if (type == 'cdf') {
data.frame(x = X, prob = pgeom(q = X, prob = p)) %>%
mutate(Failures = ifelse(x <= marked_n, marked_n, "other")) %>%
ggplot(aes(x = factor(x), y = prob, fill = Failures)) +
geom_col() +
geom_text(
aes(label = round(prob,2), y = prob + 0.01),
position = position_dodge(0.9),
size = 3,
vjust = 0
) +
labs(
title = "Cumulative Distribution Function",
subtitle = paste0("Geometric (", p, ")"),
x = "Failures before first success",
y = "Probability") +
guides(fill='none') +
scale_fill_manual(values=c("#48cbd1","brown3"))
}
}
draw_binom <- function(n, p, type='pmf', marked_n=-1) {
library(tidyverse)
library(ggplot2)
X <- 1:n
if (type == 'pmf') {
data.frame(x = X, prob = dbinom(x = X, size=n, prob = p)) %>%
mutate(Success = ifelse(x == marked_n, marked_n, "other")) %>%
ggplot(aes(x = factor(x), y = prob, fill = Success)) +
geom_col() +
geom_text(
aes(label = round(prob,2), y = prob + 0.01),
position = position_dodge(0.9),
size = 3,
vjust = 0
) +
labs(
title = "Probability Mass Function",
subtitle = paste0("Binominal (", p, ")"),
x = "Successes",
y = "Probability") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
else if (type == 'cdf') {
data.frame(x = X, prob = pbinom(q = X, size=n, prob = p)) %>%
mutate(Success = ifelse(x <= marked_n, marked_n, "other")) %>%
ggplot(aes(x = factor(x), y = prob, fill = Success)) +
geom_col() +
geom_text(
aes(label = round(prob,2), y = prob + 0.01),
position = position_dodge(0.9),
size = 3,
vjust = 0
) +
labs(
title = "Cumulative Distribution Function",
subtitle = paste0("Binominal (", p, ")"),
x = "Successes",
y = "Probability") +
guides(fill='none') +
scale_fill_manual(values=c("#48cbd1","brown3"))
}
}
draw_norm <- function(mean, sd) {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(mean-3.5*sd, mean+3.5*sd))
ggplot(xvalues, aes(x=x)) +
stat_function(fun = dnorm,
args = list(mean = mean,
sd = sd),
geom = "area", fill = "#48cbd1", alpha = 0.9)+
geom_vline(xintercept = mean, linetype='dashed', color='brown3') +
labs(
title = "Probability Density Function",
subtitle = paste0("Normal (", mean,', ', sd, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
install_github(mintzer/Statistika)
install_github(mintzer/Statistika)
install_git(mintzer/Statistika)
install_github(mintzer/statistika)
install_github(mintzer/Statistika)
install_github(repo = mintzer/Statistika)
install_github('mintzer/Statistika')
library(Statistika)
install_github('mintzer/Statistika')
install_github('mintzer/Statistika')
library(Statistika)
library(Statistika)
install_github('mintzer/Statistika')
install_github('mintzer/Statistika',upgrade = TRUE)
library(Statistika)
remove.packages(Statistika)
remove.packages('Statistika')
install_github('mintzer/Statistika',upgrade = TRUE)
library(Statistika)
draw_geom()
install_github('mintzer/Statistika',upgrade = TRUE)
library(devtools)
install_github('mintzer/Statistika')
library('Statistika')
draw_norm(10,2)
draw_exp(30,30)
draw_exp(30,1)
draw_exp(30,1/3)
ggplot(xvalues,aes(x=x)) +
stat_function(fun = pexp, args = c(rate=rate),
color = "#48cbd1", size=2)+      labs(
title = "Cumulative Distribution Function",
subtitle = paste0("Exponential (", round(rate,2), ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
draw_exp(30,1/4)
draw_exp(30,1/5)
draw_exp(30,1/6)
draw_exp(6,1/6)
draw_binom(6,0.3)
draw_binom(6,0.4)
draw_binom(6,0.6)
draw_geom(6,0.6)
draw_binom(6,0.6)
draw_geom(6,0.6)
draw_geom(1,0.6)
draw_geom(0,0.6)
draw_norm(180,10)
draw_norm <- function(mean, sd, n=-10^11) {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(mean-3.5*sd, mean+3.5*sd),
marked = ifelse(x <= marked_n, marked_n, "other"))
ggplot(xvalues, aes(x=x, fill=marked)) +
stat_function(fun = dnorm,
args = list(mean = mean,
sd = sd),
geom = "area", alpha = 0.9)+
geom_vline(xintercept = mean, linetype='dashed', color='brown3') +
labs(
title = "Probability Density Function",
subtitle = paste0("Normal (", mean,', ', sd, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
draw_norm(10,3)
draw_norm <- function(mean, sd, n=-10^11) {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(mean-3.5*sd, mean+3.5*sd)) %>%
mutate(marked = ifelse(x <= marked_n, marked_n, "other"))
ggplot(xvalues, aes(x=x, fill=marked)) +
stat_function(fun = dnorm,
args = list(mean = mean,
sd = sd),
geom = "area", alpha = 0.9)+
geom_vline(xintercept = mean, linetype='dashed', color='brown3') +
labs(
title = "Probability Density Function",
subtitle = paste0("Normal (", mean,', ', sd, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
draw_norm(10,2)
draw_norm <- function(mean, sd, n=-10^11) {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(mean-3.5*sd, mean+3.5*sd)) %>%
mutate(marked = ifelse(x <= n, n, "other"))
ggplot(xvalues, aes(x=x, fill=marked)) +
stat_function(fun = dnorm,
args = list(mean = mean,
sd = sd),
geom = "area", alpha = 0.9)+
geom_vline(xintercept = mean, linetype='dashed', color='brown3') +
labs(
title = "Probability Density Function",
subtitle = paste0("Normal (", mean,', ', sd, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
draw_norm(10,2)
draw_norm(10,2,4)
draw_norm(10,2,5)
draw_norm(10,2,5)
draw_norm(10,2)
values <- data.frame(x = c(mean-3.5*sd, mean+3.5*sd)) %>%
mutate(marked = ifelse(x <= n, n, "other"))
print(xvalues$marked)
ggplot(xvalues, aes(x=x, fill=marked)) +
stat_function(fun = dnorm,
args = list(mean = mean,
sd = sd),
geom = "area", alpha = 0.9)+
geom_vline(xintercept = mean, linetype='dashed', color='brown3') +
labs(
title = "Probability Density Function",
subtitle = paste0("Normal (", mean,', ', sd, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
draw_norm <- function(mean, sd, n=-10^11) {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(mean-3.5*sd, mean+3.5*sd)) %>%
mutate(marked = ifelse(x <= n, n, "other"))
print(xvalues$marked)
ggplot(xvalues, aes(x=x, fill=marked)) +
stat_function(fun = dnorm,
args = list(mean = mean,
sd = sd),
geom = "area", alpha = 0.9)+
geom_vline(xintercept = mean, linetype='dashed', color='brown3') +
labs(
title = "Probability Density Function",
subtitle = paste0("Normal (", mean,', ', sd, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
draw_norm(10,2)
draw_norm <- function(mean, sd) {
library(tidyverse)
library(ggplot2)
xvalues <- data.frame(x = c(mean-3.5*sd, mean+3.5*sd))
ggplot(xvalues, aes(x=x)) +
stat_function(fun = dnorm,
args = list(mean = mean,
sd = sd),
geom = "area", fill = "#48cbd1", alpha = 0.9)+
geom_vline(xintercept = mean, linetype='dashed', color='brown3') +
labs(
title = "Probability Density Function",
subtitle = paste0("Normal (", mean,', ', sd, ")"),
x = "Value",
y = "Density") +
guides(fill='none') +
scale_fill_manual(values=c("brown3","#48cbd1"))
}
draw_norm(10,2)
draw_exp(20,0.5)
draw_exp(20,1.5)
draw_exp(20,1.5, 'cdf')
